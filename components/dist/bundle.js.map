{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/dom.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/observation/notifier.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/observation/observable.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/attributes.js","webpack:///./node_modules/@microsoft/fast-web-utilities/dist/key-codes.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/fast-definitions.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/controller.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/fast-element.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/interfaces.js","webpack:///./src/form-associated/index.ts","webpack:///./node_modules/@microsoft/fast-element/dist/esm/styles.js","webpack:///./src/template-component/checkbox.styles.ts","webpack:///./node_modules/@microsoft/fast-element/dist/esm/directives/directive.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/directives/binding.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/template-compiler.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/view.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/template.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/directives/slotted.js","webpack:///./node_modules/@microsoft/fast-element/dist/esm/directives/node-observation.js","webpack:///./src/template-component/checkbox.template.ts","webpack:///./src/template-component/checkbox.ts","webpack:///./src/select/select.styles.ts","webpack:///./node_modules/@microsoft/fast-element/dist/esm/directives/ref.js","webpack:///./src/select/select.template.ts","webpack:///./src/select/select.ts","webpack:///./src/select/oui-option.styles.ts","webpack:///./src/select/oui-option.template.ts","webpack:///./src/select/oui-option.ts","webpack:///./src/select/oui-listbox.styles.ts","webpack:///./src/select/oui-listbox.template.ts","webpack:///./src/select/oui-listbox.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__decorate","decorators","target","desc","arguments","length","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadataKey","metadataValue","metadata","markerClass","Math","random","toString","substring","updateQueue","globalThis","trustedTypes","createPolicy","rules","fastHTMLPolicy","createHTML","html","htmlPolicy","processQueue","index","scan","newLength","DOM","freeze","policy","Error","isMarker","node","nodeType","data","startsWith","extractDirectiveIndexFromMarker","parseInt","replace","createInterpolationPlaceholder","attributeName","this","createBlockPlaceholder","callable","window","requestAnimationFrame","push","element","removeAttribute","setAttribute","spilloverSubscribe","subscriber","spillover","indexOf","spilloverUnsubscribe","splice","spilloverNotifySubscribers","args","source","ii","handleChange","spilloverHas","SubscriberSet","sub1","sub2","has","subscribe","unsubscribe","notify","PropertyChangeNotifier","subscribers","propertyName","propertyToWatch","propertyToUnwatch","notifierLookup","WeakMap","accessorLookup","watcher","DefaultObservableAccessor","field","callback","hasCallback","observe","newValue","oldValue","getNotifier","Observable","array","found","$fastController","Array","isArray","createArrayObserver","set","nameOrAccessor","getAccessors","getValue","setValue","accessors","currentTarget","getPrototypeOf","slice","queueUpdate","observable","$target","$prop","currentEvent","setCurrentEvent","event","ExecutionContext","parent","first","last","defaultExecutionContext","ObservableExpression","expression","observer","needsRefresh","needsQueue","notifier","next","scope","context","dispose","result","current","prev","prevValue","handleExpressionChange","booleanConverter","toView","fromView","Owner","attribute","toLowerCase","converter","guards","Set","fieldName","callbackName","tryReflectToAttribute","track","add","delete","latestValue","setBooleanAttribute","attributeLists","attributes","list","j","jj","config","configOrTarget","prop","decorator","constructor","KeyCodes","FASTElementDefinition","propertyLookup","attributeLookup","template","styles","shadowOptions","elementOptions","fastDefinitions","Map","getDefinition","Type","defaultEventOptions","bubbles","composed","definition","super","view","isConnected","boundObservables","behaviors","shadowRoot","attachShadow","appendTo","addStyles","addStylesTo","sourceBehaviors","addBehaviors","removeStylesFrom","removeBehaviors","targetBehaviors","unbind","propertyNames","keys","attrDef","onAttributeChangedCallback","type","detail","options","dispatchEvent","CustomEvent","assign","controller","defaultShadowOptions","defaultElementOptions","createFASTElement","BaseType","forCustomElement","emit","onConnectedCallback","onDisconnectedCallback","FASTElement","HTMLElement","from","nameOrDef","collect","observedAttributes","proto","customElements","define","customElement","emptyArray","supportsElementInternals","FormAssociated","disabled","required","proxyEventsToBlock","elementInternals","attachInternals","validity","proxy","form","validationMessage","willValidate","labels","ownerDocument","id","parentLabels","forLabels","getRootNode","querySelectorAll","concat","classList","toggle","connectedCallback","style","display","appendChild","forEach","addEventListener","stopPropagation","removeEventListener","checkValidity","reportValidity","flags","message","anchor","setValidity","setCustomValidity","state","setFormValue","e","keyCode","HTMLFormElement","submit","styleLookup","ElementStyles","reduceStyles","map","x","reduce","curr","reduceBehaviors","AdoptedStyleSheetsStyles","styleSheetCache","styleSheets","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","sourceSheets","filter","styleClassId","StyleElementStyles","styleClass","document","createElement","innerHTML","className","prepend","removeChild","createStyles","ShadowRoot","css","strings","values","cssString","trim","CheckboxStyles","Directive","targetIndex","behavior","createCustomAttributePlaceholder","normalBind","observableExpression","updateTarget","evaluate","triggerBind","targetName","normalUnbind","triggerUnbind","updateAttributeTarget","updateBooleanAttributeTarget","updateTextTarget","textContent","updatePropertyTarget","updateClassTarget","classVersions","version","names","split","currentName","remove","createPlaceholder","originalTargetName","cleanedTargetName","substr","preventDefault","compilationContext","locatedDirectives","createAggregateBinding","parts","partCount","finalParts","binding","output","parseContent","directives","char","interpolationStart","pos","open","quote","partIndex","directive","compileAttributes","factories","includeBasicValues","attr","attrValue","removeAttributeNode","captureContentBinding","viewBehaviorFactories","targetAtContent","compileContent","walker","parseResult","lastNode","currentPart","currentNode","parentNode","insertBefore","createTextNode","nextSibling","nextNode","range","createRange","HTMLView","fragment","firstChild","lastChild","hasChildNodes","end","oldSource","views","setStart","setEnd","deleteContents","HTMLTemplateBehavior","location","behaviorCount","hasHostBehaviors","targetOffset","hostBehaviorFactories","host","fec","content","firstElementChild","tagName","directiveCount","createTreeWalker","createComment","compileTemplate","cloneNode","viewFactories","behaviorIndex","factory","factoryIndex","createBehavior","hostFactories","getElementById","lastAttributeNameRegex","currentString","match","exec","shouldUpdate","some","getNodes","unobserve","assignedNodes","CheckboxTemplate","checked","readOnly","keypressHandler","clickHandler","indeterminate","defaultSlottedNodes","propertyOrOptions","Checkbox","defaultChecked","checkedAttribute","dirtyChecked","constructed","updateForm","$emit","RefBehavior","SelectTemplate","v","optionSelectionChange","keypressHandlerButtonContainer","keypressHandlerListbox","Select","updateButtonPartAttr","setTimeout","setFocusOnOption","getOptions","moveOption","handleMultiple","multiple","hasAttribute","optionBag","getElements","el","currentIndex","previous","option","getFirstSelectedOption","focus","button","buttonSlotUsed","direction","getElement","selector","els","querySelector","selectedValue","updateSelectValue","slot","OuiOptionStyles","OuiOptionTemplate","OuiOption","HTMLInputElement","OuiListboxStyles","OuiListboxTemplate","OuiListbox","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const markerClass = `fast-${Math.random().toString(36).substring(7)}`;\nconst updateQueue = [];\n// Tiny API-only polyfill for trustedTypes\n/* eslint-disable */\nif (globalThis.trustedTypes === void 0) {\n    globalThis.trustedTypes = { createPolicy: (name, rules) => rules };\n}\nconst fastHTMLPolicy = globalThis.trustedTypes.createPolicy(\"fast-html\", {\n    createHTML: html => html,\n});\n/* eslint-enable */\nlet htmlPolicy = fastHTMLPolicy;\nfunction processQueue() {\n    const capacity = 1024;\n    let index = 0;\n    while (index < updateQueue.length) {\n        const task = updateQueue[index];\n        task.call();\n        index++;\n        // Prevent leaking memory for long chains of recursive calls to `queueMicroTask`.\n        // If we call `queueMicroTask` within a MicroTask scheduled by `queueMicroTask`, the queue will\n        // grow, but to avoid an O(n) walk for every MicroTask we execute, we don't\n        // shift MicroTasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 MicroTasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (let scan = 0, newLength = updateQueue.length - index; scan < newLength; scan++) {\n                updateQueue[scan] = updateQueue[scan + index];\n            }\n            updateQueue.length -= index;\n            index = 0;\n        }\n    }\n    updateQueue.length = 0;\n}\nexport const DOM = Object.freeze({\n    setHTMLPolicy(policy) {\n        if (htmlPolicy !== fastHTMLPolicy) {\n            throw new Error(\"The HTML policy can only be set once.\");\n        }\n        htmlPolicy = policy;\n    },\n    createHTML(html) {\n        return htmlPolicy.createHTML(html);\n    },\n    isMarker(node) {\n        return (node && node.nodeType === 8 && node.data.startsWith(markerClass));\n    },\n    extractDirectiveIndexFromMarker(node) {\n        return parseInt(node.data.replace(`${markerClass}:`, \"\"));\n    },\n    createInterpolationPlaceholder(index) {\n        return `@{${index}}`;\n    },\n    createCustomAttributePlaceholder(attributeName, index) {\n        return `${attributeName}=\"${this.createInterpolationPlaceholder(index)}\"`;\n    },\n    createBlockPlaceholder(index) {\n        return `<!--${markerClass}:${index}-->`;\n    },\n    queueUpdate(callable) {\n        if (updateQueue.length < 1) {\n            window.requestAnimationFrame(processQueue);\n        }\n        updateQueue.push(callable);\n    },\n    setAttribute(element, attributeName, value) {\n        if (value === null || value === undefined) {\n            element.removeAttribute(attributeName);\n        }\n        else {\n            element.setAttribute(attributeName, value);\n        }\n    },\n    setBooleanAttribute(element, attributeName, value) {\n        value\n            ? element.setAttribute(attributeName, \"\")\n            : element.removeAttribute(attributeName);\n    },\n});\n","function spilloverSubscribe(subscriber) {\n    const spillover = this.spillover;\n    const index = spillover.indexOf(subscriber);\n    if (index === -1) {\n        spillover.push(subscriber);\n    }\n}\nfunction spilloverUnsubscribe(subscriber) {\n    const spillover = this.spillover;\n    const index = spillover.indexOf(subscriber);\n    if (index !== -1) {\n        spillover.splice(index, 1);\n    }\n}\nfunction spilloverNotifySubscribers(args) {\n    const spillover = this.spillover;\n    const source = this.source;\n    for (let i = 0, ii = spillover.length; i < ii; ++i) {\n        spillover[i].handleChange(source, args);\n    }\n}\nfunction spilloverHas(subscriber) {\n    return this.spillover.indexOf(subscriber) !== -1;\n}\n/**\n * An implementation of Notifier that efficiently keeps track of subscribers interested\n * in a specific change notification on an observable source.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n */\nexport class SubscriberSet {\n    /**\n     * Creates an instance of SubscriberSet for the specified source.\n     * @param source The object source that subscribers will receive notifications from.\n     */\n    constructor(source) {\n        this.source = source;\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber The subscriber to test for inclusion in this set.\n     */\n    has(subscriber) {\n        return this.sub1 === subscriber || this.sub2 === subscriber;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber The object that is subscribing for change notification.\n     */\n    subscribe(subscriber) {\n        if (this.has(subscriber)) {\n            return;\n        }\n        if (this.sub1 === void 0) {\n            this.sub1 = subscriber;\n            return;\n        }\n        if (this.sub2 === void 0) {\n            this.sub2 = subscriber;\n            return;\n        }\n        this.spillover = [this.sub1, this.sub2, subscriber];\n        this.subscribe = spilloverSubscribe;\n        this.unsubscribe = spilloverUnsubscribe;\n        this.notify = spilloverNotifySubscribers;\n        this.has = spilloverHas;\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber The object that is unsubscribing from change notification.\n     */\n    unsubscribe(subscriber) {\n        if (this.sub1 === subscriber) {\n            this.sub1 = void 0;\n        }\n        else if (this.sub2 === subscriber) {\n            this.sub2 = void 0;\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args Data passed along to subscribers during notification.\n     */\n    notify(args) {\n        const sub1 = this.sub1;\n        const sub2 = this.sub2;\n        const source = this.source;\n        if (sub1 !== void 0) {\n            sub1.handleChange(source, args);\n        }\n        if (sub2 !== void 0) {\n            sub2.handleChange(source, args);\n        }\n    }\n}\n/**\n * An implementation of Notifier that allows subscribers to be notified of individual property changes on an object.\n */\nexport class PropertyChangeNotifier {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified source.\n     * @param source The object source that subscribers will receive notifications from.\n     */\n    constructor(source) {\n        this.source = source;\n        this.subscribers = {};\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName The property name, passed along to subscribers during notification.\n     */\n    notify(propertyName) {\n        const subscribers = this.subscribers[propertyName];\n        if (subscribers !== void 0) {\n            subscribers.notify(propertyName);\n        }\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber The object that is subscribing for change notification.\n     * @param propertyToWatch The name of the property that the subscriber is interested in watching for changes.\n     */\n    subscribe(subscriber, propertyToWatch) {\n        let subscribers = this.subscribers[propertyToWatch];\n        if (subscribers === void 0) {\n            this.subscribers[propertyToWatch] = subscribers = new SubscriberSet(this.source);\n        }\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch The name of the property that the subscriber is no longer interested in watching.\n     */\n    unsubscribe(subscriber, propertyToUnwatch) {\n        const subscribers = this.subscribers[propertyToUnwatch];\n        if (subscribers === void 0) {\n            return;\n        }\n        subscribers.unsubscribe(subscriber);\n    }\n}\n","import { DOM } from \"../dom\";\nimport { PropertyChangeNotifier } from \"./notifier\";\nconst notifierLookup = new WeakMap();\nconst accessorLookup = new WeakMap();\nlet watcher = void 0;\nclass DefaultObservableAccessor {\n    constructor(name, target) {\n        this.name = name;\n        this.field = `_${name}`;\n        this.callback = `${name}Changed`;\n        this.hasCallback = this.callback in target;\n    }\n    getValue(source) {\n        if (watcher !== void 0) {\n            watcher.observe(source, this.name);\n        }\n        return source[this.field];\n    }\n    setValue(source, newValue) {\n        const field = this.field;\n        const oldValue = source[field];\n        if (oldValue !== newValue) {\n            source[field] = newValue;\n            if (this.hasCallback) {\n                source[this.callback](oldValue, newValue);\n            }\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            getNotifier(source).notify(this.name);\n        }\n    }\n}\nexport const Observable = {\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    createArrayObserver(array) {\n        throw new Error(\"Must call enableArrayObservation before observing arrays.\");\n    },\n    getNotifier(source) {\n        let found = source.$fastController || notifierLookup.get(source);\n        if (found === void 0) {\n            if (Array.isArray(source)) {\n                found = Observable.createArrayObserver(source);\n            }\n            else {\n                notifierLookup.set(source, (found = new PropertyChangeNotifier(source)));\n            }\n        }\n        return found;\n    },\n    track(source, propertyName) {\n        if (watcher !== void 0) {\n            watcher.observe(source, propertyName);\n        }\n    },\n    notify(source, args) {\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n        getNotifier(source).notify(args);\n    },\n    defineProperty(target, nameOrAccessor) {\n        if (typeof nameOrAccessor === \"string\") {\n            nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor, target);\n        }\n        this.getAccessors(target).push(nameOrAccessor);\n        Reflect.defineProperty(target, nameOrAccessor.name, {\n            enumerable: true,\n            get: function () {\n                return nameOrAccessor.getValue(this);\n            },\n            set: function (newValue) {\n                nameOrAccessor.setValue(this, newValue);\n            },\n        });\n    },\n    getAccessors(target) {\n        let accessors = accessorLookup.get(target);\n        if (accessors === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while (accessors === void 0 && currentTarget !== null) {\n                accessors = accessorLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            if (accessors === void 0) {\n                accessors = [];\n            }\n            else {\n                accessors = accessors.slice(0);\n            }\n            accessorLookup.set(target, accessors);\n        }\n        return accessors;\n    },\n};\nconst getNotifier = Observable.getNotifier;\nconst queueUpdate = DOM.queueUpdate;\nexport function observable($target, $prop) {\n    Observable.defineProperty($target, $prop);\n}\nlet currentEvent = null;\nexport function setCurrentEvent(event) {\n    currentEvent = event;\n}\n/**\n * Provides additional contextual information available to behaviors and expressions.\n */\nexport class ExecutionContext {\n    constructor() {\n        this.index = 0;\n        this.length = 0;\n        this.parent = null;\n    }\n    get event() {\n        return currentEvent;\n    }\n    get even() {\n        return this.index % 2 === 0;\n    }\n    get odd() {\n        return this.index % 2 !== 0;\n    }\n    get first() {\n        return this.index === 0;\n    }\n    get middle() {\n        return !this.first && !this.last;\n    }\n    get last() {\n        return this.index === this.length - 1;\n    }\n}\nObservable.defineProperty(ExecutionContext.prototype, \"index\");\nObservable.defineProperty(ExecutionContext.prototype, \"length\");\nexport const defaultExecutionContext = new ExecutionContext();\nexport class ObservableExpression {\n    constructor(expression, observer) {\n        this.expression = expression;\n        this.observer = observer;\n        this.needsRefresh = true;\n        this.needsQueue = true;\n        this.first = this;\n        this.last = null;\n        this.source = void 0;\n        this.propertyName = void 0;\n        this.notifier = void 0;\n        this.next = void 0;\n    }\n    evaluate(scope, context) {\n        if (this.needsRefresh && this.last !== null) {\n            this.dispose();\n        }\n        watcher = this.needsRefresh ? this : void 0;\n        this.needsRefresh = false;\n        const result = this.expression(scope, context);\n        watcher = void 0;\n        return result;\n    }\n    dispose() {\n        if (this.last !== null) {\n            let current = this.first;\n            while (current !== void 0) {\n                current.notifier.unsubscribe(this, current.propertyName);\n                current = current.next;\n            }\n            this.last = null;\n            this.needsRefresh = true;\n        }\n    }\n    /** @internal */\n    observe(source, propertyName) {\n        const prev = this.last;\n        const notifier = getNotifier(source);\n        const current = prev === null ? this.first : {};\n        current.source = source;\n        current.propertyName = propertyName;\n        current.notifier = notifier;\n        notifier.subscribe(this, propertyName);\n        if (prev !== null) {\n            if (!this.needsRefresh) {\n                watcher = void 0;\n                const prevValue = prev.source[prev.propertyName];\n                watcher = this;\n                if (source === prevValue) {\n                    this.needsRefresh = true;\n                }\n            }\n            prev.next = current;\n        }\n        this.last = current;\n    }\n    /** @internal */\n    handleChange() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            queueUpdate(this);\n        }\n    }\n    /** @internal */\n    call() {\n        this.needsQueue = true;\n        this.observer.handleExpressionChange(this);\n    }\n}\n","import { Observable } from \"./observation/observable\";\nimport { DOM } from \"./dom\";\nexport const booleanConverter = {\n    toView(value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView(value) {\n        if (value === null ||\n            value === void 0 ||\n            value === \"false\" ||\n            value === false ||\n            value === 0) {\n            return false;\n        }\n        return true;\n    },\n};\nexport const nullableNumberConverter = {\n    toView(value) {\n        if (value === null || value === undefined) {\n            return null;\n        }\n        const number = value * 1;\n        return isNaN(number) ? null : number.toString();\n    },\n    fromView(value) {\n        if (value === null || value === undefined) {\n            return null;\n        }\n        const number = value * 1;\n        return isNaN(number) ? null : number;\n    },\n};\nexport class AttributeDefinition {\n    constructor(Owner, name, attribute = name.toLowerCase(), mode = \"reflect\", converter) {\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.guards = new Set();\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === \"boolean\" && converter === void 0) {\n            this.converter = booleanConverter;\n        }\n    }\n    setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) {\n            newValue = converter.fromView(newValue);\n        }\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) {\n                source[this.callbackName](oldValue, newValue);\n            }\n            source.$fastController.notify(this.name);\n        }\n    }\n    getValue(source) {\n        Observable.track(source, this.name);\n        return source[this.fieldName];\n    }\n    onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) {\n            return;\n        }\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") {\n            return;\n        }\n        DOM.queueUpdate(() => {\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch (mode) {\n                case \"reflect\":\n                    const converter = this.converter;\n                    DOM.setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case \"boolean\":\n                    DOM.setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push(Owner.attributes);\n        for (let i = 0, ii = attributeLists.length; i < ii; ++i) {\n            const list = attributeLists[i];\n            if (list === void 0) {\n                continue;\n            }\n            for (let j = 0, jj = list.length; j < jj; ++j) {\n                const config = list[j];\n                if (typeof config === \"string\") {\n                    attributes.push(new AttributeDefinition(Owner, config));\n                }\n                else {\n                    attributes.push(new AttributeDefinition(Owner, config.property, config.attribute, config.mode, config.converter));\n                }\n            }\n        }\n        return attributes;\n    }\n}\nexport function attr(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) {\n            // Non invocation:\n            // - @attr\n            // Invocation with or w/o opts:\n            // - @attr()\n            // - @attr({...opts})\n            config.property = $prop;\n        }\n        const attributes = $target.constructor.attributes ||\n            ($target.constructor.attributes = []);\n        attributes.push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n","/*\n * Key Code values\n * @deprecated - use individual keycode exports\n */\nexport var KeyCodes;\n(function (KeyCodes) {\n    KeyCodes[KeyCodes[\"alt\"] = 18] = \"alt\";\n    KeyCodes[KeyCodes[\"arrowDown\"] = 40] = \"arrowDown\";\n    KeyCodes[KeyCodes[\"arrowLeft\"] = 37] = \"arrowLeft\";\n    KeyCodes[KeyCodes[\"arrowRight\"] = 39] = \"arrowRight\";\n    KeyCodes[KeyCodes[\"arrowUp\"] = 38] = \"arrowUp\";\n    KeyCodes[KeyCodes[\"back\"] = 8] = \"back\";\n    KeyCodes[KeyCodes[\"backSlash\"] = 220] = \"backSlash\";\n    KeyCodes[KeyCodes[\"break\"] = 19] = \"break\";\n    KeyCodes[KeyCodes[\"capsLock\"] = 20] = \"capsLock\";\n    KeyCodes[KeyCodes[\"closeBracket\"] = 221] = \"closeBracket\";\n    KeyCodes[KeyCodes[\"colon\"] = 186] = \"colon\";\n    KeyCodes[KeyCodes[\"colon2\"] = 59] = \"colon2\";\n    KeyCodes[KeyCodes[\"comma\"] = 188] = \"comma\";\n    KeyCodes[KeyCodes[\"ctrl\"] = 17] = \"ctrl\";\n    KeyCodes[KeyCodes[\"delete\"] = 46] = \"delete\";\n    KeyCodes[KeyCodes[\"end\"] = 35] = \"end\";\n    KeyCodes[KeyCodes[\"enter\"] = 13] = \"enter\";\n    KeyCodes[KeyCodes[\"equals\"] = 187] = \"equals\";\n    KeyCodes[KeyCodes[\"equals2\"] = 61] = \"equals2\";\n    KeyCodes[KeyCodes[\"equals3\"] = 107] = \"equals3\";\n    KeyCodes[KeyCodes[\"escape\"] = 27] = \"escape\";\n    KeyCodes[KeyCodes[\"forwardSlash\"] = 191] = \"forwardSlash\";\n    KeyCodes[KeyCodes[\"function1\"] = 112] = \"function1\";\n    KeyCodes[KeyCodes[\"function10\"] = 121] = \"function10\";\n    KeyCodes[KeyCodes[\"function11\"] = 122] = \"function11\";\n    KeyCodes[KeyCodes[\"function12\"] = 123] = \"function12\";\n    KeyCodes[KeyCodes[\"function2\"] = 113] = \"function2\";\n    KeyCodes[KeyCodes[\"function3\"] = 114] = \"function3\";\n    KeyCodes[KeyCodes[\"function4\"] = 115] = \"function4\";\n    KeyCodes[KeyCodes[\"function5\"] = 116] = \"function5\";\n    KeyCodes[KeyCodes[\"function6\"] = 117] = \"function6\";\n    KeyCodes[KeyCodes[\"function7\"] = 118] = \"function7\";\n    KeyCodes[KeyCodes[\"function8\"] = 119] = \"function8\";\n    KeyCodes[KeyCodes[\"function9\"] = 120] = \"function9\";\n    KeyCodes[KeyCodes[\"home\"] = 36] = \"home\";\n    KeyCodes[KeyCodes[\"insert\"] = 45] = \"insert\";\n    KeyCodes[KeyCodes[\"menu\"] = 93] = \"menu\";\n    KeyCodes[KeyCodes[\"minus\"] = 189] = \"minus\";\n    KeyCodes[KeyCodes[\"minus2\"] = 109] = \"minus2\";\n    KeyCodes[KeyCodes[\"numLock\"] = 144] = \"numLock\";\n    KeyCodes[KeyCodes[\"numPad0\"] = 96] = \"numPad0\";\n    KeyCodes[KeyCodes[\"numPad1\"] = 97] = \"numPad1\";\n    KeyCodes[KeyCodes[\"numPad2\"] = 98] = \"numPad2\";\n    KeyCodes[KeyCodes[\"numPad3\"] = 99] = \"numPad3\";\n    KeyCodes[KeyCodes[\"numPad4\"] = 100] = \"numPad4\";\n    KeyCodes[KeyCodes[\"numPad5\"] = 101] = \"numPad5\";\n    KeyCodes[KeyCodes[\"numPad6\"] = 102] = \"numPad6\";\n    KeyCodes[KeyCodes[\"numPad7\"] = 103] = \"numPad7\";\n    KeyCodes[KeyCodes[\"numPad8\"] = 104] = \"numPad8\";\n    KeyCodes[KeyCodes[\"numPad9\"] = 105] = \"numPad9\";\n    KeyCodes[KeyCodes[\"numPadDivide\"] = 111] = \"numPadDivide\";\n    KeyCodes[KeyCodes[\"numPadDot\"] = 110] = \"numPadDot\";\n    KeyCodes[KeyCodes[\"numPadMinus\"] = 109] = \"numPadMinus\";\n    KeyCodes[KeyCodes[\"numPadMultiply\"] = 106] = \"numPadMultiply\";\n    KeyCodes[KeyCodes[\"numPadPlus\"] = 107] = \"numPadPlus\";\n    KeyCodes[KeyCodes[\"openBracket\"] = 219] = \"openBracket\";\n    KeyCodes[KeyCodes[\"pageDown\"] = 34] = \"pageDown\";\n    KeyCodes[KeyCodes[\"pageUp\"] = 33] = \"pageUp\";\n    KeyCodes[KeyCodes[\"period\"] = 190] = \"period\";\n    KeyCodes[KeyCodes[\"print\"] = 44] = \"print\";\n    KeyCodes[KeyCodes[\"quote\"] = 222] = \"quote\";\n    KeyCodes[KeyCodes[\"scrollLock\"] = 145] = \"scrollLock\";\n    KeyCodes[KeyCodes[\"shift\"] = 16] = \"shift\";\n    KeyCodes[KeyCodes[\"space\"] = 32] = \"space\";\n    KeyCodes[KeyCodes[\"tab\"] = 9] = \"tab\";\n    KeyCodes[KeyCodes[\"tilde\"] = 192] = \"tilde\";\n    KeyCodes[KeyCodes[\"windowsLeft\"] = 91] = \"windowsLeft\";\n    KeyCodes[KeyCodes[\"windowsOpera\"] = 219] = \"windowsOpera\";\n    KeyCodes[KeyCodes[\"windowsRight\"] = 92] = \"windowsRight\";\n})(KeyCodes || (KeyCodes = {}));\nexport const keyCodeAlt = 18;\nexport const keyCodeArrowDown = 40;\nexport const keyCodeArrowLeft = 37;\nexport const keyCodeArrowRight = 39;\nexport const keyCodeArrowUp = 38;\nexport const keyCodeBack = 8;\nexport const keyCodeBackSlash = 220;\nexport const keyCodeBreak = 19;\nexport const keyCodeCapsLock = 20;\nexport const keyCodeCloseBracket = 221;\nexport const keyCodeColon = 186;\nexport const keyCodeColon2 = 59; // Opera and Firefox\nexport const keyCodeComma = 188;\nexport const keyCodeCtrl = 17;\nexport const keyCodeDelete = 46;\nexport const keyCodeEnd = 35;\nexport const keyCodeEnter = 13;\nexport const keyCodeEquals = 187;\nexport const keyCodeEquals2 = 61; // Opera\nexport const keyCodeEquals3 = 107; // Firefox\nexport const keyCodeEscape = 27;\nexport const keyCodeForwardSlash = 191;\nexport const keyCodeFunction1 = 112;\nexport const keyCodeFunction10 = 121;\nexport const keyCodeFunction11 = 122;\nexport const keyCodeFunction12 = 123;\nexport const keyCodeFunction2 = 113;\nexport const keyCodeFunction3 = 114;\nexport const keyCodeFunction4 = 115;\nexport const keyCodeFunction5 = 116;\nexport const keyCodeFunction6 = 117;\nexport const keyCodeFunction7 = 118;\nexport const keyCodeFunction8 = 119;\nexport const keyCodeFunction9 = 120;\nexport const keyCodeHome = 36;\nexport const keyCodeInsert = 45;\nexport const keyCodeMenu = 93;\nexport const keyCodeMinus = 189;\nexport const keyCodeMinus2 = 109; // Opera and Firefox\nexport const keyCodeNumLock = 144;\nexport const keyCodeNumPad0 = 96;\nexport const keyCodeNumPad1 = 97;\nexport const keyCodeNumPad2 = 98;\nexport const keyCodeNumPad3 = 99;\nexport const keyCodeNumPad4 = 100;\nexport const keyCodeNumPad5 = 101;\nexport const keyCodeNumPad6 = 102;\nexport const keyCodeNumPad7 = 103;\nexport const keyCodeNumPad8 = 104;\nexport const keyCodeNumPad9 = 105;\nexport const keyCodeNumPadDivide = 111;\nexport const keyCodeNumPadDot = 110;\nexport const keyCodeNumPadMinus = 109;\nexport const keyCodeNumPadMultiply = 106;\nexport const keyCodeNumPadPlus = 107;\nexport const keyCodeOpenBracket = 219;\nexport const keyCodePageDown = 34;\nexport const keyCodePageUp = 33;\nexport const keyCodePeriod = 190;\nexport const keyCodePrint = 44;\nexport const keyCodeQuote = 222;\nexport const keyCodeScrollLock = 145;\nexport const keyCodeShift = 16;\nexport const keyCodeSpace = 32;\nexport const keyCodeTab = 9;\nexport const keyCodeTilde = 192;\nexport const keyCodeWindowsLeft = 91;\nexport const keyCodeWindowsOpera = 219; // Opera\nexport const keyCodeWindowsRight = 92;\n","export class FASTElementDefinition {\n    constructor(name, attributes, propertyLookup, attributeLookup, template, styles, shadowOptions, elementOptions) {\n        this.name = name;\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.template = template;\n        this.styles = styles;\n        this.shadowOptions = shadowOptions;\n        this.elementOptions = elementOptions;\n    }\n}\nexport const fastDefinitions = new Map();\nexport function getDefinition(Type) {\n    return fastDefinitions.get(Type);\n}\n","import { getDefinition } from \"./fast-definitions\";\nimport { PropertyChangeNotifier } from \"./observation/notifier\";\nimport { defaultExecutionContext, Observable } from \"./observation/observable\";\nconst defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n};\nexport class Controller extends PropertyChangeNotifier {\n    constructor(element, definition) {\n        super(element);\n        this.element = element;\n        this.definition = definition;\n        this.view = null;\n        this.isConnected = false;\n        this.boundObservables = null;\n        this.behaviors = null;\n        const template = definition.template;\n        const styles = definition.styles;\n        const shadowRoot = definition.shadowOptions === void 0\n            ? void 0\n            : element.attachShadow(definition.shadowOptions);\n        if (template !== void 0) {\n            const view = (this.view = template.create(this.element));\n            if (shadowRoot === void 0) {\n                view.appendTo(element);\n            }\n            else {\n                view.appendTo(shadowRoot);\n            }\n        }\n        if (styles !== void 0) {\n            this.addStyles(styles, shadowRoot);\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = Observable.getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = (this.boundObservables = Object.create(null));\n            for (let i = 0, ii = accessors.length; i < ii; ++i) {\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    addStyles(styles, target = this.element.shadowRoot) {\n        if (target !== null) {\n            styles.addStylesTo(target);\n        }\n        const sourceBehaviors = styles.behaviors;\n        if (sourceBehaviors !== null) {\n            this.addBehaviors(sourceBehaviors);\n        }\n    }\n    removeStyles(styles) {\n        const target = this.element.shadowRoot;\n        if (target !== null) {\n            styles.removeStylesFrom(target);\n        }\n        const sourceBehaviors = styles.behaviors;\n        if (sourceBehaviors !== null) {\n            this.removeBehaviors(sourceBehaviors);\n        }\n    }\n    addBehaviors(behaviors) {\n        const targetBehaviors = this.behaviors || (this.behaviors = []);\n        const length = behaviors.length;\n        for (let i = 0; i < length; ++i) {\n            targetBehaviors.push(behaviors[i]);\n        }\n        if (this.isConnected) {\n            const element = this.element;\n            for (let i = 0; i < length; ++i) {\n                behaviors[i].bind(element, defaultExecutionContext);\n            }\n        }\n    }\n    removeBehaviors(behaviors) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) {\n            return;\n        }\n        const length = behaviors.length;\n        for (let i = 0; i < length; ++i) {\n            const index = targetBehaviors.indexOf(behaviors[i]);\n            if (index !== -1) {\n                targetBehaviors.splice(index, 1);\n            }\n        }\n        if (this.isConnected) {\n            const element = this.element;\n            for (let i = 0; i < length; ++i) {\n                behaviors[i].unbind(element);\n            }\n        }\n    }\n    onConnectedCallback() {\n        if (this.isConnected) {\n            return;\n        }\n        const element = this.element;\n        const boundObservables = this.boundObservables;\n        // If we have any observables that were bound, re-apply their values.\n        if (boundObservables !== null) {\n            const propertyNames = Object.keys(boundObservables);\n            for (let i = 0, ii = propertyNames.length; i < ii; ++i) {\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n        const view = this.view;\n        if (view !== null) {\n            view.bind(element, defaultExecutionContext);\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(element, defaultExecutionContext);\n            }\n        }\n        this.isConnected = true;\n    }\n    onDisconnectedCallback() {\n        if (this.isConnected === false) {\n            return;\n        }\n        this.isConnected = false;\n        const view = this.view;\n        if (view !== null) {\n            view.unbind();\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            const element = this.element;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].unbind(element);\n            }\n        }\n    }\n    onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) {\n            attrDef.onAttributeChangedCallback(this.element, newValue);\n        }\n    }\n    emit(type, detail, options) {\n        if (this.isConnected) {\n            return this.element.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({ detail }, defaultEventOptions), options)));\n        }\n        return false;\n    }\n    static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) {\n            return controller;\n        }\n        const definition = getDefinition(element.constructor);\n        if (definition === void 0) {\n            throw new Error(\"Missing fast element definition.\");\n        }\n        return (element.$fastController = new Controller(element, definition));\n    }\n}\n","import { AttributeDefinition } from \"./attributes\";\nimport { Controller } from \"./controller\";\nimport { Observable } from \"./observation/observable\";\nimport { fastDefinitions, FASTElementDefinition, getDefinition, } from \"./fast-definitions\";\nconst defaultShadowOptions = { mode: \"open\" };\nconst defaultElementOptions = {};\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\nfunction createFASTElement(BaseType) {\n    return class extends BaseType {\n        constructor() {\n            /* eslint-disable-next-line */\n            super();\n            Controller.forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.onConnectedCallback();\n        }\n        disconnectedCallback() {\n            this.$fastController.onDisconnectedCallback();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n}\nexport const FASTElement = Object.assign(createFASTElement(HTMLElement), {\n    from(BaseType) {\n        return createFASTElement(BaseType);\n    },\n    define(Type, nameOrDef = Type.definition) {\n        if (typeof nameOrDef === \"string\") {\n            nameOrDef = { name: nameOrDef };\n        }\n        const name = nameOrDef.name;\n        const attributes = AttributeDefinition.collect(Type, nameOrDef.attributes);\n        const shadowOptions = nameOrDef.shadowOptions === void 0\n            ? defaultShadowOptions\n            : nameOrDef.shadowOptions === null\n                ? void 0\n                : Object.assign(Object.assign({}, defaultShadowOptions), nameOrDef.shadowOptions);\n        const elementOptions = nameOrDef.elementOptions === void 0\n            ? defaultElementOptions\n            : Object.assign(Object.assign({}, defaultElementOptions), nameOrDef.shadowOptions);\n        const observedAttributes = new Array(attributes.length);\n        const proto = Type.prototype;\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for (let i = 0, ii = attributes.length; i < ii; ++i) {\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            Observable.defineProperty(proto, current);\n        }\n        Reflect.defineProperty(Type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true,\n        });\n        const definition = new FASTElementDefinition(name, attributes, propertyLookup, attributeLookup, nameOrDef.template, nameOrDef.styles, shadowOptions, elementOptions);\n        fastDefinitions.set(Type, definition);\n        customElements.define(name, Type, definition.elementOptions);\n        return Type;\n    },\n    getDefinition,\n});\nexport function customElement(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        FASTElement.define(type, nameOrDef);\n    };\n}\n","export const emptyArray = Object.freeze([]);\n","import { attr, DOM, emptyArray, FASTElement } from \"@microsoft/fast-element\";\r\nimport { keyCodeEnter } from \"@microsoft/fast-web-utilities\";\r\n\r\n/**\r\n * This file enables typing support for ElementInternals APIs.\r\n * It is largely taken from https://github.com/microsoft/TSJS-lib-generator/pull/818/files.\r\n *\r\n * When TypeScript adds support for these APIs we can delete this file.\r\n */\r\n\r\ninterface ValidityStateFlags {\r\n    badInput?: boolean;\r\n    customError?: boolean;\r\n    patternMismatch?: boolean;\r\n    rangeOverflow?: boolean;\r\n    rangeUnderflow?: boolean;\r\n    stepMismatch?: boolean;\r\n    tooLong?: boolean;\r\n    tooShort?: boolean;\r\n    typeMismatch?: boolean;\r\n    valueMissing?: boolean;\r\n}\r\n\r\n/**\r\n * Source:\r\n * https://html.spec.whatwg.org/multipage/custom-elements.html#elementinternals\r\n */\r\ninterface ElementInternals {\r\n    /**\r\n     * Returns the form owner of internals target element.\r\n     */\r\n    readonly form: HTMLFormElement | null;\r\n    /**\r\n     * Returns a NodeList of all the label elements that internals target element is associated with.\r\n     */\r\n    readonly labels: NodeList;\r\n    /**\r\n     * Returns the error message that would be shown to the user if internals target element was to be checked for validity.\r\n     */\r\n    readonly validationMessage: string;\r\n    /**\r\n     * Returns the ValidityState object for internals target element.\r\n     */\r\n    readonly validity: ValidityState;\r\n    /**\r\n     * Returns true if internals target element will be validated when the form is submitted; false otherwise.\r\n     */\r\n    readonly willValidate: boolean;\r\n    /**\r\n     * Returns true if internals target element has no validity problems; false otherwise. Fires an invalid event at the element in the latter case.\r\n     */\r\n    checkValidity(): boolean;\r\n    /**\r\n     * Returns true if internals target element has no validity problems; otherwise,\r\n     * returns false, fires an invalid event at the element, and (if the event isn't canceled) reports the problem to the user.\r\n     */\r\n    reportValidity(): boolean;\r\n    /**\r\n     * Sets both the state and submission value of internals target element to value.\r\n     *\r\n     * While \"null\" isn't enumerated as a argument type (here)[https://html.spec.whatwg.org/multipage/custom-elements.html#the-elementinternals-interface],\r\n     * In practice it appears to remove the value from the form data on submission. Adding it as a valid type here\r\n     * becuase that capability is required for checkbox and radio types\r\n     */\r\n    setFormValue(\r\n        value: File | string | FormData | null,\r\n        state?: File | string | FormData | null\r\n    ): void;\r\n    /**\r\n     * Marks internals target element as suffering from the constraints indicated by the flags argument,\r\n     * and sets the element's validation message to message.\r\n     * If anchor is specified, the user agent might use\r\n     * it to indicate problems with the constraints of internals target\r\n     * element when the form owner is validated interactively or reportValidity() is called.\r\n     */\r\n    setValidity(flags: ValidityStateFlags, message?: string, anchor?: HTMLElement): void;\r\n}\r\n\r\ndeclare let ElementInternals: {\r\n    prototype: ElementInternals;\r\n    new (): ElementInternals;\r\n};\r\n\r\ninterface HTMLElement {\r\n    attachInternals?(): ElementInternals;\r\n}\r\n\r\nexport const supportsElementInternals = \"ElementInternals\" in window;\r\n\r\n/**\r\n * Disable member ordering to keep property callbacks\r\n * grouped with property declaration\r\n */\r\nexport abstract class FormAssociated<\r\n    T extends HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n> extends FASTElement {\r\n    /**\r\n     * Must evaluate to true to enable elementInternals.\r\n     * Feature detects API support and resolve respectively\r\n     */\r\n    public static get formAssociated(): boolean {\r\n        return supportsElementInternals;\r\n    }\r\n\r\n    /**\r\n     * Returns the validty state of the element\r\n     */\r\n    public get validity(): ValidityState {\r\n        return supportsElementInternals\r\n            ? this.elementInternals.validity\r\n            : this.proxy.validity;\r\n    }\r\n\r\n    /**\r\n     * Retrieve a reference to the associated form.\r\n     * Returns null if not associated to any form.\r\n     */\r\n    public get form(): HTMLFormElement | null {\r\n        return supportsElementInternals ? this.elementInternals.form : this.proxy.form;\r\n    }\r\n\r\n    /**\r\n     * Retrieve the localized validation message,\r\n     * or custom validation message if set.\r\n     */\r\n    public get validationMessage(): string {\r\n        return supportsElementInternals\r\n            ? this.elementInternals.validationMessage\r\n            : this.proxy.validationMessage;\r\n    }\r\n\r\n    /**\r\n     * Whether the element will be validated when the\r\n     * form is submitted\r\n     */\r\n    public get willValidate(): boolean {\r\n        return supportsElementInternals\r\n            ? this.elementInternals.willValidate\r\n            : this.proxy.willValidate;\r\n    }\r\n\r\n    /**\r\n     * A reference to all associated label elements\r\n     */\r\n    public get labels(): ReadonlyArray<Node> {\r\n        if (supportsElementInternals) {\r\n            return Object.freeze(Array.from(this.elementInternals.labels));\r\n        } else if (\r\n            this.proxy instanceof HTMLElement &&\r\n            this.proxy.ownerDocument &&\r\n            this.id\r\n        ) {\r\n            // Labels associated by wraping the element: <label><custom-element></custom-element></label>\r\n            const parentLabels = this.proxy.labels;\r\n            // Labels associated using the `for` attribute\r\n            const forLabels = Array.from(\r\n                (this.proxy.getRootNode() as HTMLDocument | ShadowRoot).querySelectorAll(\r\n                    `[for='${this.id}']`\r\n                )\r\n            );\r\n\r\n            const labels = parentLabels\r\n                ? forLabels.concat(Array.from(parentLabels))\r\n                : forLabels;\r\n\r\n            return Object.freeze(labels);\r\n        } else {\r\n            return emptyArray;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The value of the element to be associated with the form\r\n     */\r\n    @attr\r\n    public value: string = \"\";\r\n\r\n    @attr({ mode: \"boolean\" })\r\n    public disabled: boolean = false;\r\n    protected disabledChanged(): void {\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.disabled = this.disabled;\r\n        }\r\n\r\n        DOM.queueUpdate(() => this.classList.toggle(\"disabled\", this.disabled));\r\n    }\r\n\r\n    @attr\r\n    public name: string;\r\n    protected nameChanged(): void {\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.name = this.name;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Require the field prior to form submission\r\n     */\r\n    @attr({ mode: \"boolean\" })\r\n    public required: boolean = false;\r\n    protected requiredChanged(): void {\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.required = this.required;\r\n        }\r\n\r\n        DOM.queueUpdate(() => this.classList.toggle(\"required\", this.required));\r\n    }\r\n\r\n    /**\r\n     * The proxy element provided by\r\n     */\r\n    protected abstract proxy: T;\r\n\r\n    /**\r\n     * The element internals object. Will only exist\r\n     * in browsers supporting the attachInternals API\r\n     */\r\n    protected elementInternals: ElementInternals;\r\n\r\n    /**\r\n     * These are events that are still fired by the proxy\r\n     * element based on user / programmatic interaction.\r\n     *\r\n     * The proxy implementation should be transparent to\r\n     * the app author, so block these events from emitting.\r\n     */\r\n    private proxyEventsToBlock = [\"change\", \"click\"];\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        if (supportsElementInternals) {\r\n            this.elementInternals = (this as any).attachInternals();\r\n        }\r\n    }\r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n        if (!supportsElementInternals) {\r\n            this.proxy.style.display = \"none\";\r\n            this.appendChild(this.proxy);\r\n\r\n            this.proxyEventsToBlock.forEach(name =>\r\n                this.proxy.addEventListener(name, this.stopPropagation)\r\n            );\r\n\r\n            // These are typically mapped to the proxy during\r\n            // property change callbacks, but during initialization\r\n            // on the intial call of the callback, the proxy is\r\n            // still undefined. We should find a better way to address this.\r\n            this.proxy.disabled = this.disabled;\r\n            this.proxy.required = this.required;\r\n            if (typeof this.name === \"string\") {\r\n                this.proxy.name = this.name;\r\n            }\r\n            if (typeof this.value === \"string\") {\r\n                this.proxy.value = this.value;\r\n            }\r\n        }\r\n    }\r\n\r\n    public disconnectedCallback(): void {\r\n        this.proxyEventsToBlock.forEach(name =>\r\n            this.proxy.removeEventListener(name, this.stopPropagation)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Return the current validity of the element\r\n     */\r\n    public checkValidity(): boolean {\r\n        return supportsElementInternals\r\n            ? this.elementInternals.checkValidity()\r\n            : this.proxy.checkValidity();\r\n    }\r\n\r\n    /**\r\n     * Return the current validity of the element.\r\n     * If false, fires an invalid event at the element.\r\n     */\r\n    public reportValidity(): boolean {\r\n        return supportsElementInternals\r\n            ? this.elementInternals.reportValidity()\r\n            : this.proxy.reportValidity();\r\n    }\r\n\r\n    /**\r\n     * Set the validity of the control. In cases when the elementInternals object is not\r\n     * available (and the proxy element is used to report validity), this function will\r\n     * do nothing unless a message is provided, at which point the setCustomValidity method\r\n     * of the proxy element will be invoked with the provided message.\r\n     * @param flags Validity flags\r\n     * @param message Optional message to supply\r\n     * @param anchor Optional element used by UA to display an interactive validation UI\r\n     */\r\n    public setValidity(\r\n        flags: ValidityStateFlags,\r\n        message?: string,\r\n        anchor?: HTMLElement\r\n    ): void {\r\n        if (supportsElementInternals) {\r\n            this.elementInternals.setValidity(flags, message, anchor);\r\n        } else if (typeof message === \"string\") {\r\n            this.proxy.setCustomValidity(message);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invoked when a connected component's form or fieldset has it's disabled\r\n     * state changed.\r\n     * @param disabled the disabled value of the form / fieldset\r\n     */\r\n    public formDisabledCallback(disabled: boolean): void {\r\n        this.disabled = disabled;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param value The value to set\r\n     * @param state The state object provided to during session restores and when autofilling.\r\n     */\r\n    protected setFormValue(\r\n        value: File | string | FormData | null,\r\n        state?: File | string | FormData | null\r\n    ): void {\r\n        if (supportsElementInternals) {\r\n            this.elementInternals.setFormValue(value, state);\r\n        }\r\n    }\r\n\r\n    protected keypressHandler(e: KeyboardEvent): void {\r\n        switch (e.keyCode) {\r\n            case keyCodeEnter:\r\n                if (this.form instanceof HTMLFormElement) {\r\n                    // Match native behavior\r\n                    this.form.submit();\r\n                }\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used to stop propagation of proxy element events\r\n     * @param e Event object\r\n     */\r\n    private stopPropagation(e: Event): void {\r\n        e.stopPropagation();\r\n    }\r\n}","const styleLookup = new Map();\nexport class ElementStyles {\n    constructor() {\n        /** @internal */\n        this.behaviors = null;\n    }\n    withBehaviors(...behaviors) {\n        this.behaviors =\n            this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    withKey(key) {\n        styleLookup.set(key, this);\n        return this;\n    }\n    static find(key) {\n        return styleLookup.get(key) || null;\n    }\n}\nfunction reduceStyles(styles) {\n    return styles\n        .map((x) => x instanceof ElementStyles ? reduceStyles(x.styles) : [x])\n        .reduce((prev, curr) => prev.concat(curr), []);\n}\nfunction reduceBehaviors(styles) {\n    return styles\n        .map((x) => (x instanceof ElementStyles ? x.behaviors : null))\n        .reduce((prev, curr) => {\n        if (curr === null) {\n            return prev;\n        }\n        if (prev === null) {\n            prev = [];\n        }\n        return prev.concat(curr);\n    }, null);\n}\n// https://wicg.github.io/construct-stylesheets/\n// https://developers.google.com/web/updates/2019/02/constructable-stylesheets\nexport class AdoptedStyleSheetsStyles extends ElementStyles {\n    constructor(styles, styleSheetCache) {\n        super();\n        this.styles = styles;\n        this.behaviors = null;\n        this.behaviors = reduceBehaviors(styles);\n        this.styleSheets = reduceStyles(styles).map((x) => {\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        target.adoptedStyleSheets = [...target.adoptedStyleSheets, ...this.styleSheets];\n    }\n    removeStylesFrom(target) {\n        const sourceSheets = this.styleSheets;\n        target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x) => sourceSheets.indexOf(x) !== -1);\n    }\n}\nlet styleClassId = 0;\nfunction getNextStyleClass() {\n    return `fast-style-class-${++styleClassId}`;\n}\nexport class StyleElementStyles extends ElementStyles {\n    constructor(styles) {\n        super();\n        this.styles = styles;\n        this.behaviors = null;\n        this.behaviors = reduceBehaviors(styles);\n        this.styleSheets = reduceStyles(styles);\n        this.styleClass = getNextStyleClass();\n    }\n    addStylesTo(target) {\n        const styleSheets = this.styleSheets;\n        const styleClass = this.styleClass;\n        for (let i = styleSheets.length - 1; i > -1; --i) {\n            const element = document.createElement(\"style\");\n            element.innerHTML = styleSheets[i];\n            element.className = styleClass;\n            target.prepend(element);\n        }\n    }\n    removeStylesFrom(target) {\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for (let i = 0, ii = styles.length; i < ii; ++i) {\n            target.removeChild(styles[i]);\n        }\n    }\n}\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nexport const createStyles = (() => {\n    if (\"adoptedStyleSheets\" in window.ShadowRoot.prototype) {\n        const styleSheetCache = new Map();\n        return (styles) => new AdoptedStyleSheetsStyles(styles, styleSheetCache);\n    }\n    return (styles) => new StyleElementStyles(styles);\n})();\n/* eslint-enable @typescript-eslint/explicit-function-return-type */\nexport function css(strings, ...values) {\n    const styles = [];\n    let cssString = \"\";\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        cssString += strings[i];\n        const value = values[i];\n        if (value instanceof ElementStyles) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        }\n        else {\n            cssString += value;\n        }\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") {\n        styles.push(cssString);\n    }\n    return createStyles(styles);\n}\n","\r\nimport { css } from \"@microsoft/fast-element\";\r\nexport const CheckboxStyles = css`.control {border: 2px solid blue;}`;","import { DOM } from \"../dom\";\nexport class Directive {\n    constructor() {\n        this.targetIndex = 0;\n    }\n}\nexport class AttachedBehaviorDirective extends Directive {\n    constructor(name, behavior, options) {\n        super();\n        this.name = name;\n        this.behavior = behavior;\n        this.options = options;\n    }\n    createPlaceholder(index) {\n        return DOM.createCustomAttributePlaceholder(this.name, index);\n    }\n    createBehavior(target) {\n        return new this.behavior(target, this.options);\n    }\n}\n","import { setCurrentEvent } from \"../observation/observable\";\nimport { ObservableExpression } from \"../observation/observable\";\nimport { DOM } from \"../dom\";\nimport { Directive } from \"./directive\";\nfunction normalBind(source, context) {\n    this.source = source;\n    this.context = context;\n    if (this.observableExpression === null) {\n        this.observableExpression = new ObservableExpression(this.expression, this);\n    }\n    this.updateTarget(this.observableExpression.evaluate(source, context));\n}\nfunction triggerBind(source, context) {\n    this.source = source;\n    this.context = context;\n    this.target.addEventListener(this.targetName, this, true);\n}\nfunction normalUnbind() {\n    this.observableExpression.dispose();\n    this.source = null;\n    this.context = null;\n}\nfunction triggerUnbind() {\n    this.target.removeEventListener(this.targetName, this, true);\n    this.source = null;\n    this.context = null;\n}\nfunction updateAttributeTarget(value) {\n    DOM.setAttribute(this.target, this.targetName, value);\n}\nfunction updateBooleanAttributeTarget(value) {\n    DOM.setBooleanAttribute(this.target, this.targetName, value);\n}\nfunction updateTextTarget(value) {\n    this.target.textContent = value;\n}\nfunction updatePropertyTarget(value) {\n    this.target[this.targetName] = value;\n}\nfunction updateClassTarget(value) {\n    const classVersions = this.classVersions || Object.create(null);\n    const target = this.target;\n    let version = this.version || 0;\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for (let i = 0, ii = names.length; i < ii; ++i) {\n            const currentName = names[i];\n            if (currentName === \"\") {\n                continue;\n            }\n            classVersions[currentName] = version;\n            target.classList.add(currentName);\n        }\n    }\n    this.classVersions = classVersions;\n    this.version = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) {\n        return;\n    }\n    // Remove classes from the previous version.\n    version -= 1;\n    for (const name in classVersions) {\n        if (classVersions[name] === version) {\n            target.classList.remove(name);\n        }\n    }\n}\nexport class BindingDirective extends Directive {\n    constructor(expression) {\n        super();\n        this.expression = expression;\n        this.createPlaceholder = DOM.createInterpolationPlaceholder;\n        this.bind = normalBind;\n        this.unbind = normalUnbind;\n        this.updateTarget = updateAttributeTarget;\n    }\n    get targetName() {\n        return this.originalTargetName;\n    }\n    set targetName(value) {\n        this.originalTargetName = value;\n        if (value === void 0) {\n            return;\n        }\n        switch (value[0]) {\n            case \":\":\n                this.cleanedTargetName = value.substr(1);\n                this.updateTarget = updatePropertyTarget;\n                if (this.cleanedTargetName === \"innerHTML\") {\n                    const expression = this.expression;\n                    /* eslint-disable-next-line */\n                    this.expression = (s, c) => DOM.createHTML(expression(s, c));\n                }\n                break;\n            case \"?\":\n                this.cleanedTargetName = value.substr(1);\n                this.updateTarget = updateBooleanAttributeTarget;\n                break;\n            case \"@\":\n                this.cleanedTargetName = value.substr(1);\n                this.bind = triggerBind;\n                this.unbind = triggerUnbind;\n                break;\n            default:\n                this.cleanedTargetName = value;\n                if (value === \"class\") {\n                    this.updateTarget = updateClassTarget;\n                }\n                break;\n        }\n    }\n    targetAtContent() {\n        this.updateTarget = updateTextTarget;\n    }\n    createBehavior(target) {\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n        return new BindingBehavior(target, this.expression, this.bind, this.unbind, this.updateTarget, this.cleanedTargetName);\n    }\n}\nexport class BindingBehavior {\n    constructor(target, expression, bind, unbind, updateTarget, targetName) {\n        this.target = target;\n        this.expression = expression;\n        this.bind = bind;\n        this.unbind = unbind;\n        this.updateTarget = updateTarget;\n        this.targetName = targetName;\n        this.source = null;\n        this.context = null;\n        this.observableExpression = null;\n    }\n    handleExpressionChange() {\n        this.updateTarget(this.observableExpression.evaluate(this.source, this.context));\n    }\n    handleEvent(event) {\n        setCurrentEvent(event);\n        const result = this.expression(this.source, this.context);\n        setCurrentEvent(null);\n        if (result !== true) {\n            event.preventDefault();\n        }\n    }\n}\n","import { DOM } from \"./dom\";\nimport { BindingDirective } from \"./directives/binding\";\nconst compilationContext = { locatedDirectives: 0, targetIndex: -1 };\nfunction createAggregateBinding(parts) {\n    let targetName;\n    const partCount = parts.length;\n    const finalParts = parts.map((x) => {\n        if (typeof x === \"string\") {\n            return () => x;\n        }\n        targetName = x.targetName || targetName;\n        compilationContext.locatedDirectives++;\n        return x.expression;\n    });\n    const expression = (scope, context) => {\n        let output = \"\";\n        for (let i = 0; i < partCount; ++i) {\n            output += finalParts[i](scope, context);\n        }\n        return output;\n    };\n    const binding = new BindingDirective(expression);\n    binding.targetName = targetName;\n    return binding;\n}\nfunction parseContent(value, directives) {\n    let i = value.indexOf(\"@{\", 0);\n    const ii = value.length;\n    let char;\n    let pos = 0;\n    let open = 0;\n    let quote = null;\n    let interpolationStart;\n    let parts;\n    let partIndex = 0;\n    while (i >= 0 && i < ii - 2) {\n        open = 1;\n        interpolationStart = i;\n        i += 2;\n        do {\n            char = value[i];\n            i++;\n            if (char === \"'\" || char === '\"') {\n                if (quote === null) {\n                    quote = char;\n                }\n                else if (quote === char) {\n                    quote = null;\n                }\n                continue;\n            }\n            if (char === \"\\\\\") {\n                i++;\n                continue;\n            }\n            if (quote !== null) {\n                continue;\n            }\n            if (char === \"{\") {\n                open++;\n            }\n            else if (char === \"}\") {\n                open--;\n            }\n        } while (open > 0 && i < ii);\n        if (open === 0) {\n            // lazy allocate array\n            parts = parts || [];\n            if (value[interpolationStart - 1] === \"\\\\\" &&\n                value[interpolationStart - 2] !== \"\\\\\") {\n                // escaped interpolation\n                parts[partIndex] =\n                    value.substring(pos, interpolationStart - 1) +\n                        value.substring(interpolationStart, i);\n                partIndex++;\n            }\n            else {\n                // standard interpolation\n                parts[partIndex] = value.substring(pos, interpolationStart);\n                partIndex++;\n                const directiveIndex = parseInt(value.substring(interpolationStart + 2, i - 1));\n                const directive = directives[directiveIndex];\n                parts[partIndex] = directive;\n                partIndex++;\n            }\n            pos = i;\n            i = value.indexOf(\"@{\", i);\n        }\n        else {\n            break;\n        }\n    }\n    // no interpolation.\n    if (partIndex === 0) {\n        return null;\n    }\n    // literal.\n    parts[partIndex] = value.substr(pos);\n    parts = parts.filter((x) => x !== \"\");\n    if (parts.length == 1) {\n        return parts[0];\n    }\n    return parts;\n}\nfunction compileAttributes(node, directives, factories, includeBasicValues = false) {\n    const attributes = node.attributes;\n    for (let i = 0, ii = attributes.length; i < ii; ++i) {\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        let result = parseContent(attrValue, directives);\n        if (result === null) {\n            if (includeBasicValues) {\n                result = new BindingDirective(() => attrValue);\n                result.targetName = attr.name;\n            }\n        }\n        else if (Array.isArray(result)) {\n            result = createAggregateBinding(result);\n        }\n        else {\n            compilationContext.locatedDirectives++;\n        }\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            result.targetIndex = compilationContext.targetIndex;\n            factories.push(result);\n        }\n    }\n}\nfunction captureContentBinding(binding, viewBehaviorFactories) {\n    binding.targetAtContent();\n    binding.targetIndex = compilationContext.targetIndex;\n    viewBehaviorFactories.push(binding);\n    compilationContext.locatedDirectives++;\n}\nfunction compileContent(node, directives, factories, walker) {\n    const parseResult = parseContent(node.textContent, directives);\n    if (parseResult !== null) {\n        if (Array.isArray(parseResult)) {\n            let lastNode = node;\n            for (let i = 0, ii = parseResult.length; i < ii; ++i) {\n                const currentPart = parseResult[i];\n                const currentNode = i === 0\n                    ? node\n                    : lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n                if (typeof currentPart === \"string\") {\n                    currentNode.textContent = currentPart;\n                }\n                else {\n                    currentNode.textContent = \" \";\n                    captureContentBinding(currentPart, factories);\n                }\n                lastNode = currentNode;\n                compilationContext.targetIndex++;\n                if (currentNode !== node) {\n                    walker.nextNode();\n                }\n            }\n            compilationContext.targetIndex--;\n        }\n        else {\n            node.textContent = \" \";\n            captureContentBinding(parseResult, factories);\n        }\n    }\n}\n/**\n * Compiles a template and associated directives into a raw compilation\n * result which include a clonable DocumentFragment and factories capable\n * of attaching runtime behavior to nodes within the fragment.\n * @param template The template to compile.\n * @param directives The directives referenced by the template.\n * @remarks\n * The template that is provided for compilation is altered in-place\n * and cannot be compiled again. If the original template must be preserved,\n * it is recommended that you clone the original and pass the clone to this API.\n */\nexport function compileTemplate(template, directives) {\n    const hostBehaviorFactories = [];\n    compilationContext.locatedDirectives = 0;\n    compileAttributes(template, directives, hostBehaviorFactories, true);\n    const fragment = template.content;\n    const viewBehaviorFactories = [];\n    const directiveCount = directives.length;\n    const walker = document.createTreeWalker(fragment, 133, // element, text, comment\n    null, false);\n    compilationContext.targetIndex = -1;\n    while (compilationContext.locatedDirectives < directiveCount) {\n        const node = walker.nextNode();\n        if (node === null) {\n            break;\n        }\n        compilationContext.targetIndex++;\n        switch (node.nodeType) {\n            case 1: // element node\n                compileAttributes(node, directives, viewBehaviorFactories);\n                break;\n            case 3: // text node\n                compileContent(node, directives, viewBehaviorFactories, walker);\n                break;\n            case 8: // comment\n                if (DOM.isMarker(node)) {\n                    const directive = directives[DOM.extractDirectiveIndexFromMarker(node)];\n                    directive.targetIndex = compilationContext.targetIndex;\n                    compilationContext.locatedDirectives++;\n                    viewBehaviorFactories.push(directive);\n                }\n                else {\n                    node.parentNode.removeChild(node);\n                    compilationContext.targetIndex--;\n                }\n        }\n    }\n    let targetOffset = 0;\n    if (DOM.isMarker(fragment.firstChild)) {\n        // If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        targetOffset = -1;\n    }\n    return {\n        fragment,\n        viewBehaviorFactories,\n        hostBehaviorFactories,\n        targetOffset,\n    };\n}\n","// A singleton Range instance used to efficiently remove ranges of DOM nodes.\n// See the implementation of HTMLView below for further details.\nconst range = document.createRange();\n/**\n * The standard View implementation, which also implements ElementView and SyntheticView.\n */\nexport class HTMLView {\n    constructor(fragment, behaviors) {\n        this.fragment = fragment;\n        this.behaviors = behaviors;\n        this.source = void 0;\n        this.context = null;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node The parent node to append the view's DOM nodes to.\n     */\n    appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node The node to insert the view's DOM before.\n     */\n    insertBefore(node) {\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const parentNode = node.parentNode;\n            const end = this.lastChild;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */\n    remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        const parent = this.firstChild.parentNode;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            parent.removeChild(current);\n            current = next;\n        }\n        parent.removeChild(end);\n        const behaviors = this.behaviors;\n        const oldSource = this.source;\n        for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n            behaviors[i].unbind(oldSource);\n        }\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source The binding source for the view's binding behaviors.\n     * @param context The execution context to run the behaviors within.\n     */\n    bind(source, context) {\n        const behaviors = this.behaviors;\n        if (this.source === source) {\n            return;\n        }\n        else if (this.source !== void 0) {\n            const oldSource = this.source;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                const current = behaviors[i];\n                current.unbind(oldSource);\n                current.bind(source, context);\n            }\n        }\n        else {\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(source, context);\n            }\n        }\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */\n    unbind() {\n        if (this.source === void 0) {\n            return;\n        }\n        const behaviors = this.behaviors;\n        const oldSource = this.source;\n        for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n            behaviors[i].unbind(oldSource);\n        }\n        this.source = void 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views A contiguous range of views to be disposed.\n     */\n    static disposeContiguousBatch(views) {\n        if (views.length === 0) {\n            return;\n        }\n        range.setStart(views[0].firstChild, 0);\n        range.setEnd(views[views.length - 1].lastChild, 0);\n        range.deleteContents();\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            const view = views[i];\n            const behaviors = view.behaviors;\n            const oldSource = view.source;\n            for (let j = 0, jj = behaviors.length; j < jj; ++j) {\n                behaviors[j].unbind(oldSource);\n            }\n        }\n    }\n}\n","import { compileTemplate } from \"./template-compiler\";\nimport { HTMLView } from \"./view\";\nimport { DOM } from \"./dom\";\nimport { Directive } from \"./directives/directive\";\nimport { BindingDirective } from \"./directives/binding\";\nimport { defaultExecutionContext, } from \"./observation/observable\";\nexport class HTMLTemplateBehavior {\n    constructor(template, location) {\n        this.view = template.create();\n        this.view.insertBefore(location);\n    }\n    bind(source, context) {\n        this.view.bind(source, context);\n    }\n    unbind() {\n        this.view.unbind();\n    }\n}\n/**\n * A template capable of creating HTMLView instances or rendering directly to DOM.\n */\nexport class ViewTemplate extends Directive {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html The html representing what this template will instantiate, including placeholders for directives.\n     * @param directives The directives that will be connected to placeholders in the html.\n     */\n    constructor(html, directives) {\n        super();\n        this.html = html;\n        this.directives = directives;\n        this.createPlaceholder = DOM.createBlockPlaceholder;\n        this.behaviorCount = 0;\n        this.hasHostBehaviors = false;\n        this.fragment = null;\n        this.targetOffset = 0;\n        this.viewBehaviorFactories = null;\n        this.hostBehaviorFactories = null;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param host The host element that this template will be rendered to once created.\n     */\n    create(host) {\n        if (this.fragment === null) {\n            let template;\n            const html = this.html;\n            if (typeof html === \"string\") {\n                template = document.createElement(\"template\");\n                template.innerHTML = DOM.createHTML(html);\n                const fec = template.content.firstElementChild;\n                if (fec !== null && fec.tagName === \"TEMPLATE\") {\n                    template = fec;\n                }\n            }\n            else {\n                template = html;\n            }\n            const result = compileTemplate(template, this.directives);\n            this.fragment = result.fragment;\n            this.viewBehaviorFactories = result.viewBehaviorFactories;\n            this.hostBehaviorFactories = result.hostBehaviorFactories;\n            this.targetOffset = result.targetOffset;\n            this.behaviorCount =\n                this.viewBehaviorFactories.length + this.hostBehaviorFactories.length;\n            this.hasHostBehaviors = this.hostBehaviorFactories.length > 0;\n        }\n        const fragment = this.fragment.cloneNode(true);\n        const viewFactories = this.viewBehaviorFactories;\n        const behaviors = new Array(this.behaviorCount);\n        const walker = document.createTreeWalker(fragment, 133, // element, text, comment\n        null, false);\n        let behaviorIndex = 0;\n        let targetIndex = this.targetOffset;\n        let node = walker.nextNode();\n        for (let ii = viewFactories.length; behaviorIndex < ii; ++behaviorIndex) {\n            const factory = viewFactories[behaviorIndex];\n            const factoryIndex = factory.targetIndex;\n            while (node !== null) {\n                if (targetIndex === factoryIndex) {\n                    behaviors[behaviorIndex] = factory.createBehavior(node);\n                    break;\n                }\n                else {\n                    node = walker.nextNode();\n                    targetIndex++;\n                }\n            }\n        }\n        if (this.hasHostBehaviors) {\n            const hostFactories = this.hostBehaviorFactories;\n            for (let i = 0, ii = hostFactories.length; i < ii; ++i, ++behaviorIndex) {\n                behaviors[behaviorIndex] = hostFactories[i].createBehavior(host);\n            }\n        }\n        return new HTMLView(fragment, behaviors);\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source The data source to bind the template to.\n     * @param host The HTMLElement where the template will be rendered.\n     */\n    render(source, host) {\n        if (typeof host === \"string\") {\n            host = document.getElementById(host);\n        }\n        const view = this.create(host);\n        view.bind(source, defaultExecutionContext);\n        view.appendTo(host);\n        return view;\n    }\n    createBehavior(target) {\n        return new HTMLTemplateBehavior(this, target);\n    }\n}\n// Much thanks to LitHTML for working this out!\nconst lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n/**\n * Transforms a template literal string into a renderable ViewTemplate.\n * @param strings The string fragments that interpolated with the values.\n * @param values The values that are interpolated with the string fragments.\n * @remarks\n * The html helper supports interpolation of strings, numbers, binding expressions,\n * other template instances, and Directive instances.\n */\nexport function html(strings, ...values) {\n    const directives = [];\n    let html = \"\";\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        const currentString = strings[i];\n        let value = values[i];\n        html += currentString;\n        if (typeof value === \"function\") {\n            value = new BindingDirective(value);\n            const match = lastAttributeNameRegex.exec(currentString);\n            if (match !== null) {\n                value.targetName = match[2];\n            }\n        }\n        if (value instanceof Directive) {\n            // Since not all values are directives, we can't use i\n            // as the index for the placeholder. Instead, we need to\n            // use directives.length to get the next index.\n            html += value.createPlaceholder(directives.length);\n            directives.push(value);\n        }\n        else {\n            html += value;\n        }\n    }\n    html += strings[strings.length - 1];\n    return new ViewTemplate(html, directives);\n}\n","import { AttachedBehaviorDirective } from \"./directive\";\nimport { NodeObservationBehavior } from \"./node-observation\";\nexport class SlottedBehavior extends NodeObservationBehavior {\n    constructor(target, options) {\n        super(target, options);\n    }\n    getNodes() {\n        return this.target.assignedNodes(this.options);\n    }\n    observe() {\n        this.target.addEventListener(\"slotchange\", this);\n    }\n    unobserve() {\n        this.target.removeEventListener(\"slotchange\", this);\n    }\n}\nexport function slotted(propertyOrOptions) {\n    if (typeof propertyOrOptions === \"string\") {\n        propertyOrOptions = { property: propertyOrOptions };\n    }\n    return new AttachedBehaviorDirective(\"fast-slotted\", SlottedBehavior, propertyOrOptions);\n}\n","import { Observable } from \"../observation/observable\";\nimport { emptyArray } from \"../interfaces\";\nexport class NodeObservationBehavior {\n    constructor(target, options) {\n        this.target = target;\n        this.options = options;\n        this.source = null;\n    }\n    bind(source) {\n        const name = this.options.property;\n        this.shouldUpdate = Observable.getAccessors(source).some((x) => x.name === name);\n        this.source = source;\n        this.updateTarget(this.getNodes());\n        if (this.shouldUpdate) {\n            this.observe();\n        }\n    }\n    unbind() {\n        this.updateTarget(emptyArray);\n        this.source = null;\n        if (this.shouldUpdate) {\n            this.unobserve();\n        }\n    }\n    handleEvent() {\n        this.updateTarget(this.getNodes());\n    }\n    updateTarget(value) {\n        this.source[this.options.property] = value;\n    }\n}\n","import { html, slotted } from \"@microsoft/fast-element\";\r\nimport { Checkbox } from \"./checkbox\";\r\n\r\nexport const CheckboxTemplate = html<Checkbox>`\r\n    <template\r\n        role=\"checkbox\"\r\n        aria-checked=\"${x => x.checked}\"\r\n        aria-required=\"${x => x.required}\"\r\n        aria-disabled=\"${x => x.disabled}\"\r\n        aria-readonly=\"${x => x.readOnly}\"\r\n        tabindex=\"${x => (x.disabled ? null : 0)}\"\r\n        @keypress=\"${(x, c) => x.keypressHandler(c.event as KeyboardEvent)}\"\r\n        @click=\"${(x, c) => x.clickHandler(c.event as MouseEvent)}\"\r\n        class=\"${x => (x.readOnly ? \"readonly\" : \"\")} ${x =>\r\n            x.checked ? \"checked\" : \"\"} ${x => (x.indeterminate ? \"indeterminate\" : \"\")}\"\r\n    >\r\n        <div part=\"control\" class=\"control\">\r\n            <slot name=\"checked-indicator\">\r\n                <svg\r\n                    aria-hidden=\"true\"\r\n                    part=\"checked-indicator\"\r\n                    class=\"checked-indicator\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        fill-rule=\"evenodd\"\r\n                        clip-rule=\"evenodd\"\r\n                        d=\"M8.143 12.6697L15.235 4.5L16.8 5.90363L8.23812 15.7667L3.80005 11.2556L5.27591 9.7555L8.143 12.6697Z\"\r\n                    />\r\n                </svg>\r\n            </slot>\r\n            <slot name=\"indeterminate-indicator\">\r\n                <div part=\"indeterminate-indicator\" class=\"indeterminate-indicator\"></div>\r\n            </slot>\r\n        </div>\r\n        <label\r\n            part=\"label\"\r\n            class=\"${x =>\r\n                x.defaultSlottedNodes && x.defaultSlottedNodes.length\r\n                    ? \"label\"\r\n                    : \"label label__hidden\"}\"\r\n        >\r\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\r\n        </label>\r\n    </template>\r\n`;","import { attr, observable } from \"@microsoft/fast-element\";\r\nimport { keyCodeSpace } from \"@microsoft/fast-web-utilities\";\r\nimport { FormAssociated } from \"../form-associated/index\";\r\nimport { customElement } from \"@microsoft/fast-element\";\r\nimport { CheckboxStyles as styles } from \"./checkbox.styles\";\r\nimport { CheckboxTemplate as template } from \"./checkbox.template\"\r\n\r\n@customElement({\r\n    name: \"fast-checkbox\",\r\n    template,\r\n    styles,\r\n})\r\n\r\nexport class Checkbox extends FormAssociated<HTMLInputElement> {\r\n    @attr({ attribute: \"readonly\", mode: \"boolean\" })\r\n    public readOnly: boolean; // Map to proxy element\r\n    private readOnlyChanged(): void {\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.readOnly = this.readOnly;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The element's value to be included in form submission when checked.\r\n     * Default to \"on\" to reach parity with input[type=\"checkbox\"]\r\n     */\r\n    public value: string = \"on\"; // Map to proxy element.\r\n    private valueChanged(): void {\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.value = this.value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provides the default checkedness of the input element\r\n     * Passed down to proxy\r\n     */\r\n    @attr({ attribute: \"checked\", mode: \"boolean\" })\r\n    public checkedAttribute: boolean;\r\n    private checkedAttributeChanged(): void {\r\n        this.defaultChecked = this.checkedAttribute;\r\n    }\r\n\r\n    @observable\r\n    public defaultSlottedNodes: Node[];\r\n\r\n    /**\r\n     * Initialized to the value of the checked attribute. Can be changed independently of the \"checked\" attribute,\r\n     * but changing the \"checked\" attribute always additionally sets this value.\r\n     */\r\n    @observable\r\n    public defaultChecked: boolean = !!this.checkedAttribute;\r\n    private defaultCheckedChanged(): void {\r\n        if (!this.dirtyChecked) {\r\n            // Setting this.checked will cause us to enter a dirty state,\r\n            // but if we are clean when defaultChecked is changed, we want to stay\r\n            // in a clean state, so reset this.dirtyChecked\r\n            this.checked = this.defaultChecked;\r\n            this.dirtyChecked = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The checked state of the control\r\n     */\r\n    @observable\r\n    public checked: boolean = this.defaultChecked;\r\n    private checkedChanged(): void {\r\n        if (!this.dirtyChecked) {\r\n            this.dirtyChecked = true;\r\n        }\r\n\r\n        this.updateForm();\r\n\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.checked = this.checked;\r\n        }\r\n\r\n        if (this.constructed) {\r\n            this.$emit(\"change\");\r\n        }\r\n    }\r\n\r\n    protected proxy: HTMLInputElement = document.createElement(\"input\");\r\n\r\n    /**\r\n     * The indeterminate state of the control\r\n     */\r\n    @observable\r\n    public indeterminate: boolean = false;\r\n\r\n    /**\r\n     * Tracks whether the \"checked\" property has been changed.\r\n     * This is necessary to provide consistent behavior with\r\n     * normal input checkboxes\r\n     */\r\n    private dirtyChecked: boolean = false;\r\n\r\n    /**\r\n     * Set to true when the component has constructed\r\n     */\r\n    private constructed: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.proxy.setAttribute(\"type\", \"checkbox\");\r\n        this.constructed = true;\r\n    }\r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n        this.updateForm();\r\n    }\r\n\r\n    private updateForm(): void {\r\n        const value = this.checked ? this.value : null;\r\n        this.setFormValue(value, value);\r\n    }\r\n\r\n    public keypressHandler = (e: KeyboardEvent): void => {\r\n        super.keypressHandler(e);\r\n\r\n        switch (e.keyCode) {\r\n            case keyCodeSpace:\r\n                this.checked = !this.checked;\r\n                break;\r\n        }\r\n    };\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    public clickHandler = (e: MouseEvent): void => {\r\n        if (!this.disabled && !this.readOnly) {\r\n            this.checked = !this.checked;\r\n        }\r\n    };\r\n}","\r\nimport { css } from \"@microsoft/fast-element\";\r\nexport const CheckboxStyles = css``;","import { AttachedBehaviorDirective } from \"./directive\";\nexport class RefBehavior {\n    constructor(target, propertyName) {\n        this.target = target;\n        this.propertyName = propertyName;\n    }\n    bind(source) {\n        source[this.propertyName] = this.target;\n    }\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    unbind() { }\n}\nexport function ref(propertyName) {\n    return new AttachedBehaviorDirective(\"fast-ref\", RefBehavior, propertyName);\n}\n","import { html, slotted, ref } from \"@microsoft/fast-element\";\r\nimport { Select } from \"./select\";\r\n\r\nexport const SelectTemplate = html<Select>`\r\n    <template\r\n    @oui-option-selection-change=\"${(x, c) => {\r\n            let v = (c.event.target as any).value;\r\n            x.value = v;\r\n            x.optionSelectionChange(v)\r\n        }\r\n    }\"\r\n    class=\"${x => (x.readOnly ? \"readonly\" : \"\")}\" open=\"${x => x.open ? \"\" : null}\"\r\n    >\r\n        <slot name=\"button-container\"\r\n        @keydown=\"${(x, c) => x.keypressHandlerButtonContainer(c.event as KeyboardEvent)}\"\r\n        ${ref(\"button\")}\r\n        >\r\n            <button tabindex=\"0\" part=\"button\" aria-expanded=\"${x => x.open == true}\" aria-haspopup=\"true\">\r\n                <span part=\"selected-value\">\r\n                    <slot name=\"selected-value\">${x => x.value}</slot>\r\n                </slot>\r\n            </button>\r\n        </slot>\r\n        <slot name=\"listbox-container\"\r\n        @keydown=\"${(x, c) => x.keypressHandlerListbox(c.event as KeyboardEvent)}\">\r\n            <!-- This is where the listbox part will be inserted -->\r\n            <slot></slot>\r\n        </slot>\r\n    </template>\r\n`;","import { attr, observable } from \"@microsoft/fast-element\";\r\nimport { keyCodeSpace } from \"@microsoft/fast-web-utilities\";\r\nimport { FormAssociated } from \"../form-associated/index\";\r\nimport { customElement } from \"@microsoft/fast-element\";\r\nimport { CheckboxStyles as styles } from \"./select.styles\";\r\nimport { SelectTemplate as template } from \"./select.template\"\r\n\r\n@customElement({\r\n    name: \"oui-select\",\r\n    template,\r\n    styles,\r\n})\r\n\r\nexport class Select extends FormAssociated<HTMLInputElement> {\r\n    protected proxy: HTMLInputElement;\r\n    @attr({ attribute: \"readonly\", mode: \"boolean\" })\r\n    public readOnly: boolean; // Map to proxy element\r\n\r\n    @attr({ attribute: \"multiple\", mode: \"boolean\" })\r\n    public multiple: boolean;\r\n\r\n    @attr({ attribute: \"open\", mode: \"boolean\" })\r\n    public open: boolean;\r\n\r\n    @observable\r\n    public defaultSlottedNodes: Node[];\r\n\r\n    @observable\r\n    public button: HTMLElement;\r\n    private buttonChanged(prev: HTMLElement) {\r\n        this.button.addEventListener(\"click\", this.clickHandler);\r\n    }\r\n\r\n    // TODO: This needs to change to support multiple values\r\n    public value: string = \"Selected Value\"; // Map to proxy element.\r\n    private valueChanged(): void {\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.value = this.value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set to true when the component has constructed\r\n     */\r\n    private constructed: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.constructed = true;\r\n    }\r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n        this.buttonSlotUsed();\r\n\r\n        this.updateForm();\r\n    }\r\n\r\n    private updateForm(): void {\r\n    }\r\n\r\n    public keypressHandlerButtonContainer = (e: KeyboardEvent): void => {\r\n        super.keypressHandler(e);\r\n        switch (e.keyCode) {\r\n            // Space\r\n            case 32:\r\n                this.open = !this.open;\r\n                this.updateButtonPartAttr();\r\n                setTimeout(() => this.setFocusOnOption(), 0);\r\n                break;\r\n            // Enter\r\n            case 13:\r\n                this.open = !this.open;\r\n                this.updateButtonPartAttr();\r\n                setTimeout(() => this.setFocusOnOption(), 0);\r\n                break;\r\n            case 9:\r\n                this.setFocusOnOption();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle keyboard interactions for listbox\r\n     */\r\n    public keypressHandlerListbox = (e: KeyboardEvent): void => {\r\n        super.keypressHandler(e);\r\n        let options = this.getOptions();\r\n        switch (e.keyCode) {\r\n            // Down\r\n            case 40:\r\n                this.moveOption(\"next\", options);\r\n                break;\r\n            // Up\r\n            case 38:\r\n                this.moveOption(\"prev\", options);\r\n                break;\r\n            // Space\r\n            case 32:\r\n                this.value = options.current.value;\r\n                options.current.checked = true;\r\n                this.optionSelectionChange(options.current.value);\r\n                this.updateButtonPartAttr();\r\n                break;\r\n            // Enter\r\n            case 13:\r\n                this.value = options.current.value;\r\n                options.current.checked = true;\r\n                this.optionSelectionChange(options.current.value);\r\n                this.updateButtonPartAttr();\r\n                break;\r\n            // Escape\r\n            case 27:\r\n                options.current.removeAttribute('current');\r\n                this.open = !this.open;\r\n                this.updateButtonPartAttr();\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set which option has the 'current' attribute based on keyboard\r\n     * direction input. I'm not sure * if there is a need for this\r\n     * attribute in a standard. Once I get * focus fully working I'll\r\n     * determine if we need this or not\r\n     *\r\n     * @param direction\r\n     * @param options\r\n     */\r\n    public moveOption(direction: string, options: any) {\r\n        switch(direction) {\r\n            case \"next\":\r\n                options.current.removeAttribute('current');\r\n                options.next.setAttribute('current', \"\");\r\n                options.next.focus();\r\n                break;\r\n            case \"prev\":\r\n                options.current.removeAttribute('current');\r\n                options.previous.setAttribute('current', \"\");\r\n                options.previous.focus();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    public clickHandler = (e: MouseEvent): void => {\r\n        if (!this.disabled && !this.readOnly) {\r\n            this.open = !this.open;\r\n\r\n            if (this.open) {\r\n                setTimeout(() => this.setFocusOnOption(), 0);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This will only allow a selection of multiple values if the\r\n     * multiple attribute is set\r\n     */\r\n    public handleMultiple = (value: string): void => {\r\n        if (!this.multiple) {\r\n            let optionBag = this.getOptions();\r\n            optionBag.options.forEach(element => {\r\n                if (element.value != this.value && element.hasAttribute('checked')) {\r\n                    element.removeAttribute('checked');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To allow for options to be anywhere within the select and also\r\n     * ensure that the behaviors work and avoid needing to do additional\r\n     * queries this creates a general options object to gather them.\r\n     */\r\n    public getOptions = (): any => {\r\n        let optionBag = {\r\n            \"options\": null,\r\n            \"current\": null,\r\n            \"previous\": null,\r\n            \"checked\": [],\r\n            \"next\": null\r\n        }\r\n\r\n        optionBag.options = this.getElements(\"oui-option\");\r\n\r\n        for (let i: number = 0; i < optionBag.options.length; i++) {\r\n            let el = optionBag.options[i]\r\n            let currentIndex = i;\r\n            if (el.hasAttribute('current')) {\r\n                optionBag.current = el;\r\n\r\n                // Set the next option\r\n                // TODO: When you get to the end of the list it doesn't go back around to\r\n                //       the first one.\r\n                if (i == optionBag.options.length) {\r\n                    optionBag.next = optionBag.options[0]\r\n                }\r\n                else {\r\n                    optionBag.next = optionBag.options[currentIndex + 1]\r\n                }\r\n\r\n                currentIndex = i;\r\n\r\n                // Set the previous option\r\n                if (i == 0) {\r\n                    optionBag.previous = optionBag.options[optionBag.options.length];\r\n                }\r\n                else {\r\n                    optionBag.previous = optionBag.options[currentIndex - 1];\r\n                }\r\n            }\r\n\r\n            if (el.hasAttribute('checked')) {\r\n                optionBag.checked.push(el);\r\n            }\r\n        }\r\n\r\n        return optionBag;\r\n    }\r\n\r\n    /**\r\n     * Will set focus to the necessary element\r\n     * TODO: This will probably get removed by moveOption\r\n     */\r\n    public setFocusOnOption = (): void => {\r\n        let option = this.getFirstSelectedOption();\r\n        let options = this.getOptions();\r\n\r\n        if (option) {\r\n            if (options.current) options.current.removeAttribute('current');\r\n            option.setAttribute('current', \"\");\r\n            option.focus();\r\n        }\r\n    }\r\n\r\n    public updateButtonPartAttr(): void {\r\n        let button = this.getElement('[part=button]');\r\n\r\n        switch(this.open) {\r\n            case true:\r\n                button.setAttribute('aria-expanded', 'true');\r\n                break;\r\n            case false:\r\n                button.setAttribute('aria-expanded', 'false');\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gathers elements within the select that match the selector param\r\n     * @param selector\r\n     */\r\n    public getElements(selector: string) {\r\n        let els = this.querySelectorAll(selector);\r\n        if (els.length === 0) {\r\n            els = this.shadowRoot.querySelectorAll(selector);\r\n        }\r\n        return els;\r\n    }\r\n\r\n    /**\r\n     * Returns the first element that matches the selector param\r\n     *\r\n     * @param selector\r\n     */\r\n    public getElement(selector: string) {\r\n        let el = this.querySelector(selector);\r\n        if (!el) {\r\n            el = this.shadowRoot.querySelector(selector);\r\n        }\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * This will update the text that is in the select's\r\n     * button by default that renders the selected value\r\n     *\r\n     * @param value This is the value for the <option>\r\n     */\r\n    private updateSelectValue(value: string) {\r\n        this.value = value;\r\n\r\n        let selectedValue = this.getElement('[part=selected-value]');\r\n        if (selectedValue) selectedValue.textContent = value;\r\n    }\r\n\r\n    private getFirstSelectedOption(): HTMLInputElement {\r\n        // Set focus to the first option that has a state of checked\r\n        let option = this.getElement('oui-option[checked]') as HTMLInputElement;\r\n\r\n        // If no option is currently checked set it to the first element\r\n        if (!option) {\r\n            option = this.getElement('oui-option') as HTMLInputElement;\r\n        }\r\n\r\n        return option;\r\n    }\r\n\r\n    /**\r\n     * When a user clicks on an option we need to update the known\r\n     * parts of\r\n     * - currently selected value\r\n     * - array of values\r\n     */\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    public optionSelectionChange(value: string): void {\r\n        let options = this.getOptions();\r\n\r\n        this.handleMultiple(value);\r\n\r\n        options.options.forEach(element  => {\r\n            if (element.value != value) element.removeAttribute('current');\r\n        });\r\n\r\n        this.updateSelectValue(value);\r\n        this.open = !this.open;\r\n    }\r\n\r\n    /**\r\n     * When the author leverages the slot we need to ensure that the a11y and\r\n     * functionality that is tied to the given part still function as designed\r\n     */\r\n    public buttonSlotUsed(): void {\r\n        let slot = this.shadowRoot.querySelector('slot[name=button-container]');\r\n        if (slot) {\r\n            slot.addEventListener('slotchange', () => {\r\n                let button = this.getElement('[part=button]');\r\n                if (button) {\r\n                    button.setAttribute('tabindex', \"0\");\r\n                    button.setAttribute('aria-haspopup', 'true');\r\n                    button.setAttribute('aria-expanded', 'false');\r\n                    button.setAttribute('role', 'button');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","\r\nimport { css } from \"@microsoft/fast-element\";\r\nexport const OuiOptionStyles = css``","import { html, slotted } from \"@microsoft/fast-element\";\r\nimport { OuiOption } from \"./oui-option\";\r\n\r\nexport const OuiOptionTemplate = html<OuiOption>`\r\n    <template\r\n    tabindex=\"0\"\r\n    @click=\"${(x, c) => x.clickHandler(c.event as MouseEvent)}\"\r\n    current=\"${x => x.checked ? \"\" : null}\"\r\n    checked=\"${x => x.checked ? \"\" : null}\">\r\n        <slot></slot>\r\n    </template>\r\n`;","import { attr, observable } from \"@microsoft/fast-element\";\r\nimport { keyCodeSpace } from \"@microsoft/fast-web-utilities\";\r\nimport { FormAssociated } from \"../form-associated/index\";\r\nimport { customElement } from \"@microsoft/fast-element\";\r\nimport { OuiOptionStyles as styles } from \"./oui-option.styles\";\r\nimport { OuiOptionTemplate as template } from \"./oui-option.template\"\r\n\r\n@customElement({\r\n    name: \"oui-option\",\r\n    template,\r\n    styles,\r\n})\r\n\r\nexport class OuiOption extends FormAssociated<HTMLInputElement> {\r\n    protected proxy: HTMLInputElement;\r\n    @attr({ attribute: \"readonly\", mode: \"boolean\" })\r\n    public readOnly: boolean; // Map to proxy element\r\n\r\n    /**\r\n     * The element's value to be included in form submission when checked.\r\n     */\r\n    public value: string = \"\"; // Map to proxy element.\r\n    private valueChanged(): void {\r\n        if (this.proxy instanceof HTMLInputElement) {\r\n            this.proxy.value = this.value;\r\n        }\r\n    }\r\n\r\n    @attr({ attribute: \"checked\", mode: \"boolean\" })\r\n    public checkedAttribute: boolean;\r\n    private checkedAttributeChanged(): void {\r\n        this.defaultChecked = this.checkedAttribute;\r\n    }\r\n\r\n    @observable\r\n    public defaultChecked: boolean = !!this.checkedAttribute;\r\n    private defaultCheckedChanged(): void {\r\n        if (!this.dirtyChecked) {\r\n            // Setting this.checked will cause us to enter a dirty state,\r\n            // but if we are clean when defaultChecked is changed, we want to stay\r\n            // in a clean state, so reset this.dirtyChecked\r\n            this.checked = this.defaultChecked;\r\n            this.dirtyChecked = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The checked state of the control\r\n     */\r\n    @observable\r\n    public checked: boolean = this.defaultChecked;\r\n    private checkedChanged(): void {\r\n        if (!this.dirtyChecked) {\r\n            this.dirtyChecked = true;\r\n        }\r\n\r\n        if (this.proxy instanceof HTMLElement) {\r\n            this.proxy.checked = this.checked;\r\n        }\r\n\r\n        if (this.constructed) {\r\n            this.$emit(\"change\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tracks whether the \"checked\" property has been changed.\r\n     */\r\n    private dirtyChecked: boolean = false;\r\n\r\n    @observable\r\n    public defaultSlottedNodes: Node[];\r\n\r\n    /**\r\n     * Set to true when the component has constructed\r\n     */\r\n    private constructed: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.constructed = true;\r\n    }\r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    public clickHandler = (e: MouseEvent): void => {\r\n        (this.checked) ? this.checked = false : this.checked = true;\r\n        this.$emit(\"oui-option-selection-change\");\r\n    };\r\n}","\r\nimport { css } from \"@microsoft/fast-element\";\r\nexport const OuiListboxStyles = css``;","import { html, slotted } from \"@microsoft/fast-element\";\r\nimport { OuiListbox } from \"./oui-listbox\";\r\n\r\nexport const OuiListboxTemplate = html<OuiListbox>`\r\n    <template>\r\n        <slot></slot>\r\n    </template>\r\n`;","import { attr, observable } from \"@microsoft/fast-element\";\r\nimport { keyCodeSpace } from \"@microsoft/fast-web-utilities\";\r\nimport { FormAssociated } from \"../form-associated/index\";\r\nimport { customElement } from \"@microsoft/fast-element\";\r\nimport { FASTElement } from \"@microsoft/fast-element\";\r\nimport { OuiListboxStyles as styles } from \"./oui-listbox.styles\";\r\nimport { OuiListboxTemplate as template } from \"./oui-listbox.template\"\r\n\r\n@customElement({\r\n    name: \"oui-listbox\",\r\n    template,\r\n    styles,\r\n})\r\n\r\nexport class OuiListbox extends FASTElement {\r\n    @observable\r\n    public defaultSlottedNodes: Node[];\r\n\r\n    /**\r\n     * Set to true when the component has constructed\r\n     */\r\n    private constructed: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.constructed = true;\r\n    }\r\n\r\n    public keypressHandler = (e: KeyboardEvent): void => {\r\n        console.log('button pressed');\r\n        switch (e.keyCode) {\r\n            case keyCodeSpace:\r\n                console.log('space pressed');\r\n                break;\r\n        }\r\n    };\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    public clickHandler = (e: MouseEvent): void => {\r\n        console.log(e);\r\n    };\r\n}"],"sourceRoot":""}